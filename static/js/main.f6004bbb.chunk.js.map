{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","el1","el2","NONE","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","setSortType","showResetBtn","classBtnInfo","classNames","classBtnSuccess","classBtnWarning","className","type","onClick","prevState","style","display","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAuBzB,OApBAG,EAAaC,MAAK,SAACC,EAAKC,GACtB,OAAQL,GACN,KAAKJ,EAASU,KACZ,OAAO,EAET,KAAKV,EAASW,SACZ,OAAOH,EAAII,cAAcH,GAE3B,KAAKT,EAASa,OACZ,OAAOL,EAAIM,OAASL,EAAIK,OAE1B,QACE,OAAO,MAITT,GACFC,EAAaS,UAGRT,G,SAxCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAMgB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOZ,EAAP,KAAmBa,EAAnB,KACA,EAAgCD,mBAASjB,EAASU,MAAlD,mBAAON,EAAP,KAAiBe,EAAjB,KAmBMC,EAAehB,IAAaJ,EAASU,OAAuB,IAAfL,EAC7CgB,EAAeC,IAAW,SAAU,UACxC,CAAE,WAAYlB,IAAaJ,EAASW,WAChCY,EAAkBD,IAAW,SAAU,aAC3C,CAAE,WAAYlB,IAAaJ,EAASa,SAChCW,EAAkBF,IAAW,SAAU,aAC3C,CAAE,YAAajB,IAEjB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWJ,EACXM,QAlBmB,WACzBR,EAAYnB,EAASW,WAcjB,iCAQA,wBACEe,KAAK,SACLD,UAAWF,EACXI,QA9Ba,WACnBR,EAAYnB,EAASa,SA0BjB,4BAQA,wBACEa,KAAK,SACLD,UAAWD,EACXG,QA/CS,WACfT,GAAc,SAAAU,GAAS,OAAKA,MA2CxB,qBAQA,wBACEF,KAAK,SACLD,UAAU,4BACVE,QAnDM,WACZT,GAAc,GACdC,EAAYnB,EAASU,OAkDfmB,MAAOT,EAAe,CAAEU,QAAS,QAAW,GAJ9C,sBAUF,6BACG5B,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7C0B,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC/HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6004bbb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((el1, el2) => {\n    switch (sortType) {\n      case SortType.NONE:\n        return 0;\n\n      case SortType.ALPHABET:\n        return el1.localeCompare(el2);\n\n      case SortType.LENGTH:\n        return el1.length - el2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reversed = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const showResetBtn = sortType === SortType.NONE && isReversed === false;\n  const classBtnInfo = classNames('button', 'is-info',\n    { 'is-light': sortType !== SortType.ALPHABET });\n  const classBtnSuccess = classNames('button', 'is-success',\n    { 'is-light': sortType !== SortType.LENGTH });\n  const classBtnWarning = classNames('button', 'is-warning',\n    { 'is-light': !isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classBtnInfo}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classBtnSuccess}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classBtnWarning}\n          onClick={reversed}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n          style={showResetBtn ? { display: 'none' } : {}}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}